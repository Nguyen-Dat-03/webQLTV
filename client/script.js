const API_URL = "http://localhost:3000/api/books";

const addBtn = document.getElementById("addBtn");
const searchPageBtn = document.getElementById("searchPageBtn");
const bookTable = document.getElementById("bookTable");

// üß© L·∫•y danh s√°ch s√°ch khi load trang
window.onload = fetchBooks;

// üß± Th√™m s√°ch m·ªõi
addBtn.addEventListener("click", async () => {
  const title = document.getElementById("title").value.trim();
  const author = document.getElementById("author").value.trim();
  const genre = document.getElementById("genre").value.trim();
  const year = document.getElementById("year").value.trim();

  if (!title || !author || !genre || !year) {
    alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
    return;
  }

  try {
    const res = await fetch(API_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ title, author, genre, year }),
    });

    if (res.ok) {
      alert("‚úÖ Th√™m s√°ch th√†nh c√¥ng!");
      fetchBooks(); // c·∫≠p nh·∫≠t danh s√°ch
      document.getElementById("title").value = "";
      document.getElementById("author").value = "";
      document.getElementById("genre").value = "";
      document.getElementById("year").value = "";
    } else {
      alert("‚ùå L·ªói khi th√™m s√°ch!");
    }
  } catch (err) {
    console.error(err);
    alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server.");
  }
});

// üß≠ Chuy·ªÉn ƒë·∫øn trang t√¨m ki·∫øm
searchPageBtn.addEventListener("click", () => {
  window.location.href = "TK.html";
});

// üìò L·∫•y danh s√°ch s√°ch
async function fetchBooks() {
  try {
    const res = await fetch(API_URL);
    const books = await res.json();

    // X√≥a b·∫£ng c≈© (ch·ªâ gi·ªØ h√†ng ti√™u ƒë·ªÅ)
    bookTable.innerHTML = `
      <tr>
        <th>T√™n s√°ch</th>
        <th>T√°c gi·∫£</th>
        <th>Th·ªÉ lo·∫°i</th>
        <th>NƒÉm xu·∫•t b·∫£n</th>
        <th>H√†nh ƒë·ªông</th>
      </tr>
    `;

    books.forEach((book) => {
      const row = document.createElement("tr");
      row.innerHTML = `
        <td>${book.title}</td>
        <td>${book.author}</td>
        <td>${book.genre}</td>
        <td>${book.year}</td>
        <td><button class="delete-btn" data-id="${book._id}">X√≥a</button></td>
      `;
      bookTable.appendChild(row);
    });

    // G·∫Øn s·ª± ki·ªán x√≥a cho c√°c n√∫t
    document.querySelectorAll(".delete-btn").forEach((btn) => {
      btn.addEventListener("click", handleDelete);
    });
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y s√°ch:", err);
  }
}

// ‚ùå X·ª≠ l√Ω x√≥a s√°ch
async function handleDelete(e) {
  const id = e.target.getAttribute("data-id");
  const confirmDelete = confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s√°ch n√†y kh√¥ng?");

  if (!confirmDelete) return;

  try {
    const res = await fetch(`${API_URL}/${id}`, { method: "DELETE" });
    if (res.ok) {
      alert("‚úÖ ƒê√£ x√≥a s√°ch!");
      fetchBooks(); // C·∫≠p nh·∫≠t l·∫°i danh s√°ch
    } else {
      alert("‚ùå Kh√¥ng th·ªÉ x√≥a s√°ch!");
    }
  } catch (err) {
    console.error("L·ªói khi x√≥a:", err);
  }
}
